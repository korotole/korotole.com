services:
  website:
    build:
      context: ./website
      dockerfile: Dockerfile
    ports:
      - "${WEBSITE_PORT}:8080"
    depends_on:
      - redis
    networks:
      - korotole_network
    restart: unless-stopped
    env_file:
      - .env

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    ports:
      - "${BOT_PORT}:8081"
    networks:
      - korotole_network
    restart: unless-stopped
    env_file:
      - .env
 
  db-service:
    build: 
      context: ./db-service
      dockerfile: dockerfile
    ports:
      - "8082:8082"
    networks:
      - korotole_network
    restart: unless-stopped
    env_file:
      - .env
      
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    ports:
      - "3306:3306"
    networks:
      - korotole_network
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=11
    env_file:
      - .env

  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - korotole_network
    volumes:
      - redis_data:/data
    env_file:
      - .env

volumes:
  redis_data:
  mysql_data:

networks:
  korotole_network:
    driver: bridge
